{"ast":null,"code":"import _regeneratorRuntime from\"/Users/mithilproof/Oleic/react-dep/simon-says/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/mithilproof/Oleic/react-dep/simon-says/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useCallback,useEffect}from\"react\";import{connect,shallowEqual,useSelector}from\"react-redux\";import{bindActionCreators}from\"redux\";import{Flex}from\"reflexbox/styled-components\";import{actionCreators}from\"../actions/game\";import{Button}from\"../components/Buttons\";import CenterOverlay from\"../components/CenterOverlay\";import Game from\"../components/Game\";import GrayScale from\"../components/GrayScale\";import Pads from\"../components/Pads\";import Score from\"../components/Score\";import{NEXT_LEVEL_DELAY_TIME,SONG_DELAY_TIME}from\"../constants\";import sleep from\"../utils/sleep\";import Player from\"./Player\";import Shell from\"./Shell\";export function Board(props){var actions=props.actions;var _useSelector=useSelector(function(state){return state;},shallowEqual),_useSelector$game=_useSelector.game,gameOver=_useSelector$game.gameOver,score=_useSelector$game.score,singing=_useSelector$game.singing,highscore=_useSelector$game.highscore,match=_useSelector.match,pads=_useSelector.pads;var startMatch=useCallback(function(){actions.startGame();sleep(SONG_DELAY_TIME).then(function(){return actions.sing();});},[actions]);useEffect(function(){startMatch();},[]);var onPadClick=useCallback(function(_ref){var id=_ref.id;var tail=match.guessed.length;var succeeded=match.all[tail]===id;if(!gameOver){window.navigator.vibrate&&window.navigator.vibrate(10);actions.guess({id:id,succeeded:succeeded}).then(/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var done;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:done=_ref2.done;if(!done){_context.next=6;break;}actions.nextLevel();_context.next=5;return sleep(NEXT_LEVEL_DELAY_TIME);case 5:actions.sing();case 6:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref3.apply(this,arguments);};}());}},[actions,match]);return/*#__PURE__*/React.createElement(Shell,null,gameOver&&/*#__PURE__*/React.createElement(CenterOverlay,{p:2},/*#__PURE__*/React.createElement(\"h2\",null,\"SCORE \",score),/*#__PURE__*/React.createElement(\"h3\",null,\"HIGH SCORE \",highscore),/*#__PURE__*/React.createElement(Button,{onClick:startMatch},\"Try again\")),/*#__PURE__*/React.createElement(GrayScale,{disabled:!gameOver},/*#__PURE__*/React.createElement(Game,{disbledPointer:singing||gameOver},/*#__PURE__*/React.createElement(Flex,{align:\"center\",justify:\"center\"},pads.slice(0,2).map(function(pad,i){return/*#__PURE__*/React.createElement(Pads,{key:i,pad:pad,onClick:function onClick(){return onPadClick({id:pad.id});}});})),/*#__PURE__*/React.createElement(Score,{length:score===null||score===void 0?void 0:score.toString().length},score),/*#__PURE__*/React.createElement(Flex,{align:\"center\",justify:\"center\"},pads.slice(2,4).map(function(pad,i){return/*#__PURE__*/React.createElement(Pads,{key:i,pad:pad,onClick:function onClick(){return onPadClick({id:pad.id});}});})))),/*#__PURE__*/React.createElement(Player,null));}export default connect(null,function(dispatch){return{actions:bindActionCreators(actionCreators,dispatch)};})(Board);","map":{"version":3,"sources":["/Users/mithilproof/Oleic/react-dep/simon-says/src/screens/Board.js"],"names":["React","useCallback","useEffect","connect","shallowEqual","useSelector","bindActionCreators","Flex","actionCreators","Button","CenterOverlay","Game","GrayScale","Pads","Score","NEXT_LEVEL_DELAY_TIME","SONG_DELAY_TIME","sleep","Player","Shell","Board","props","actions","state","game","gameOver","score","singing","highscore","match","pads","startMatch","startGame","then","sing","onPadClick","id","tail","guessed","length","succeeded","all","window","navigator","vibrate","guess","done","nextLevel","slice","map","pad","i","toString","dispatch"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from \"react\";\nimport { connect, shallowEqual, useSelector } from \"react-redux\";\nimport { bindActionCreators } from \"redux\";\nimport { Flex } from \"reflexbox/styled-components\";\nimport { actionCreators } from \"../actions/game\";\nimport { Button } from \"../components/Buttons\";\nimport CenterOverlay from \"../components/CenterOverlay\";\nimport Game from \"../components/Game\";\nimport GrayScale from \"../components/GrayScale\";\nimport Pads from \"../components/Pads\";\nimport Score from \"../components/Score\";\nimport { NEXT_LEVEL_DELAY_TIME, SONG_DELAY_TIME } from \"../constants\";\nimport sleep from \"../utils/sleep\";\nimport Player from \"./Player\";\nimport Shell from \"./Shell\";\n\nexport function Board(props) {\n  const { actions } = props;\n  const {\n    game: { gameOver, score, singing, highscore },\n    match,\n    pads,\n  } = useSelector((state) => state, shallowEqual);\n\n  const startMatch = useCallback(() => {\n    actions.startGame();\n    sleep(SONG_DELAY_TIME).then(() => actions.sing());\n  }, [actions]);\n\n  useEffect(() => {\n    startMatch();\n  }, []);\n\n  const onPadClick = useCallback(\n    ({ id }) => {\n      const tail = match.guessed.length;\n      const succeeded = match.all[tail] === id;\n      if (!gameOver) {\n        window.navigator.vibrate && window.navigator.vibrate(10);\n        actions.guess({ id, succeeded }).then(async ({ done }) => {\n          if (done) {\n            actions.nextLevel();\n            await sleep(NEXT_LEVEL_DELAY_TIME);\n            actions.sing();\n          }\n        });\n      }\n    },\n    [actions, match]\n  );\n\n  return (\n    <Shell>\n      {gameOver && (\n        <CenterOverlay p={2}>\n          <h2>SCORE {score}</h2>\n          <h3>HIGH SCORE {highscore}</h3>\n          <Button onClick={startMatch}>Try again</Button>\n        </CenterOverlay>\n      )}\n      <GrayScale disabled={!gameOver}>\n        <Game disbledPointer={singing || gameOver}>\n          <Flex align=\"center\" justify=\"center\">\n            {pads.slice(0, 2).map((pad, i) => (\n              <Pads\n                key={i}\n                pad={pad}\n                onClick={() => onPadClick({ id: pad.id })}\n              />\n            ))}\n          </Flex>\n          <Score length={score?.toString().length}>{score}</Score>\n          <Flex align=\"center\" justify=\"center\">\n            {pads.slice(2, 4).map((pad, i) => (\n              <Pads\n                key={i}\n                pad={pad}\n                onClick={() => onPadClick({ id: pad.id })}\n              />\n            ))}\n          </Flex>\n        </Game>\n      </GrayScale>\n      <Player />\n    </Shell>\n  );\n}\n\nexport default connect(null, (dispatch) => ({\n  actions: bindActionCreators(actionCreators, dispatch),\n}))(Board);\n"]},"metadata":{},"sourceType":"module"}